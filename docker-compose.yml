version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.0'
    container_name: elevate-zookeeper
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - elevate_net
      - elevate_elastic
    logging:
      driver: none
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: elevate-kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - zookeeper
    networks:
      - elevate_net
      - elevate_elastic
    logging:
      driver: none
  kafka-connect:
    image: joffinjoy/kafka-connect-elasticsearch:0.1.0
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - zookeeper
      - schema-registry
    ports:
      - "8083:8083"
    networks:
      - elevate_net
      - elevate_elastic
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    logging:
      driver: none
  mongo:
    image: 'mongo:4.4.14'
    container_name: elevate-mongo
    restart: 'always'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none
  redis:
    image: 'redis:7.0.0'
    container_name: elevate-redis
    restart: 'always'
    expose:
      - '6379'
    networks:
      - elevate_net
    logging:
      driver: none
  mentoring:
    build: '../mentoring/'
    image: elevate/mentoring:1.0
    container_name: elevate-mentoring
    volumes:
      - ../mentoring/src/:/var/src
    ports:
      - '3000:3000'
    command: [ 'nodemon', 'app.js' ]
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-mentoring
      - KAFKA_URL=kafka:9092
      - USER_SERIVCE_HOST=http://user:3001
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net
  user:
    build: '../user/'
    image: elevate/user:1.0
    container_name: elevate-user
    volumes:
      - ../user/src/:/var/src
    ports:
      - '3001:3001'
    command: [ 'nodemon', 'app.js' ]
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-mentoring
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
    depends_on:
      - kafka
      - mongo
      - redis
    networks:
      - elevate_net
  notification:
    build: '../notification/'
    image: elevate/notification:1.0
    container_name: elevate-notification
    volumes:
      - ../notification/src/:/var/src
    ports:
      - '3002:3002'
    command: [ 'nodemon', 'app.js' ]
    environment:
      - KAFKA_HOST=kafka:9092
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net
  bap:
    build: '../mentoring-bap-service/'
    container_name: elevate-bap
    image: elevate/bap:1.0
    volumes:
      - ../mentoring-bap-service/src/:/var/src
    ports:
      - '3004:3004'
    command: [ 'nodemon', 'app.js' ]
    depends_on:
      - redis
    networks:
      - elevate_net
  bpp:
    build: '../mentoring-bpp-service/'
    container_name: elevate-bpp
    image: elevate/bpp:1.0
    volumes:
      - ../mentoring-bpp-service/src/:/var/src
    ports:
      - '3005:3005'
    command: [ 'nodemon', 'app.js' ]
    depends_on:
      - redis
    networks:
      - elevate_net
  bpp-catalog:
    build: '../mentoring-bpp-catalog-service/'
    container_name: elevate-catalog
    image: elevate/catalog:1.0
    volumes:
      - ../mentoring-bpp-catalog-service/src/:/var/src
    ports:
      - '3009:3009'
    command: [ 'nodemon', 'app.js' ]
    depends_on:
      - redis
      - kafka
    networks:
      - elevate_net
      - elevate_elastic
  elasticsearch:
    container_name: elevate-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.2
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    networks:
      - elevate_elastic
    logging:
      driver: none
networks:
  elevate_net:
    external: false
  elevate_elastic:
    external: false
volumes:
  zookeeper-data:
  kafka-data:
  mongo-data:
