version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.0'
    container_name: elevate-zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - elevate_net
    logging:
      driver: none
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: elevate-kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    logging:
      driver: none
  kafka-connect:
    image: joffinjoy/kafka-connect-elasticsearch:0.1.0
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"
    networks:
      - elevate_net
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-statuses
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_LOG4J_ROOT_LOGLEVEL: "ERROR"
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      REPLICATION_FACTOR: 3
    volumes:
      - $PWD/data:/data
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: kafka:9092
      SCHEMA_REGISTRY_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - elevate_net
  mongo:
    image: 'mongo:4.4.14'
    container_name: elevate-mongo
    restart: 'always'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none
  redis:
    image: 'redis:7.0.0'
    container_name: elevate-redis
    restart: 'always'
    expose:
      - '6379'
    networks:
      - elevate_net
    logging:
      driver: none
  mentoring:
    build: '../mentoring/'
    image: elevate/mentoring:1.0
    container_name: elevate-mentoring
    volumes:
      - ../mentoring/src/:/var/src
    ports:
      - '3000:3000'
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-mentoring
      - KAFKA_URL=kafka:9092
      - USER_SERIVCE_HOST=http://user:3001
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net
    logging:
      driver: none
  user:
    build: '../user/'
    image: elevate/user:1.0
    container_name: elevate-user
    volumes:
      - ../user/src/:/var/src
    ports:
      - '3001:3001'
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-mentoring
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
    depends_on:
      - kafka
      - mongo
      - redis
    networks:
      - elevate_net
    logging:
      driver: none
  notification:
    build: '../notification/'
    image: elevate/notification:1.0
    container_name: elevate-notification
    volumes:
      - ../notification/src/:/var/src
    ports:
      - '3002:3002'
    command: ['nodemon', 'app.js']
    environment:
      - KAFKA_HOST=kafka:9092
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net
    logging:
      driver: none
  bap:
    build: '../mentoring-bap-service/'
    container_name: elevate-bap
    image: elevate/bap:1.0
    volumes:
      - ../mentoring-bap-service/src/:/var/src
    ports:
      - '3004:3004'
    command: ['nodemon', 'app.js']
    depends_on:
      - redis
    networks:
      - elevate_net
    logging:
      driver: none
  bpp:
    build: '../mentoring-bpp-service/'
    container_name: elevate-bpp
    image: elevate/bpp:1.0
    volumes:
      - ../mentoring-bpp-service/src/:/var/src
    ports:
      - '3005:3005'
    command: ['nodemon', 'app.js']
    depends_on:
      - redis
    networks:
      - elevate_net
    logging:
      driver: none
  bpp-catalog:
    build: '../mentoring-bpp-catalog-service/'
    container_name: elevate-catalog
    image: elevate/catalog:1.0
    volumes:
      - ../mentoring-bpp-catalog-service/src/:/var/src
    ports:
      - '3009:3009'
    command: ['nodemon', 'app.js']
    depends_on:
      - redis
      - kafka
    networks:
      - elevate_net
      - elevate_elastic
    logging:
      driver: none
  elasticsearch:
    container_name: elevate-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.2
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    networks:
      - elevate_elastic
    logging:
      driver: none
  logstash:
    container_name: elevate-logstash
    image: docker.elastic.co/logstash/logstash:8.5.2
    ports:
      - '9600:9600'
      - '9700:9700'
    environment:
      - "xpack.monitoring.enabled=true"
    volumes:
      - ./pipeline/:/usr/share/logstash/pipeline/
    networks:
      - elevate_elastic
      - elevate_net
    depends_on:
      - elasticsearch
      - kafka
    logging:
      driver: none
  kibana:
    container_name: elevate-kibana
    image: docker.elastic.co/kibana/kibana:8.5.2
    ports:
      - '5601:5601'
    networks:
      - elevate_elastic
    depends_on:
      - elasticsearch
      - logstash
    logging:
      driver: none
networks:
  elevate_net:
    external: false
  elevate_elastic:
    external: false
volumes:
  zookeeper-data:
  kafka-data:
  mongo-data:
