version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    container_name: elevate-zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - elevate_net
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    logging:
      driver: none
  kafka:
    image: 'bitnami/kafka:3.1.0'
    container_name: elevate-kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    volumes:
      - kafka-data:/bitnami/kafka
    logging:
      driver: none
  mongo:
    image: 'mongo:4.4.14'
    container_name: elevate-mongo
    restart: 'always'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none
  redis:
    image: 'redis:7.0.0'
    container_name: elevate-redis
    restart: 'always'
    expose:
      - '6379'
    networks:
      - elevate_net
    logging:
      driver: none
  mentoring:
    build: '../mentoring/'
    image: elevate/mentoring:1.0
    container_name: elevate-mentoring
    volumes:
      - ../mentoring/src/:/var/src
    ports:
      - '3000:3000'
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-mentoring
      - KAFKA_URL=kafka:9092
      - USER_SERIVCE_HOST=http://user:3001
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net
  user:
    build: '../user/'
    image: elevate/user:1.0
    container_name: elevate-user
    volumes:
      - ../user/src/:/var/src
    ports:
      - '3001:3001'
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-mentoring
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
    depends_on:
      - kafka
      - mongo
      - redis
    networks:
      - elevate_net
  notification:
    build: '../notification/'
    image: elevate/notification:1.0
    container_name: elevate-notification
    volumes:
      - ../notification/src/:/var/src
    ports:
      - '3002:3002'
    command: ['nodemon', 'app.js']
    environment:
      - KAFKA_HOST=kafka:9092
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net
  bap:
    build: '../mentoring-bap-service/'
    container_name: elevate-bap
    image: elevate/bap:1.0
    volumes:
      - ../mentoring-bap-service/src/:/var/src
    ports:
      - '3004:3004'
    command: ['nodemon', 'app.js']
    depends_on:
      - redis
    networks:
      - elevate_net
  bpp:
    build: '../mentoring-bpp-service/'
    container_name: elevate-bpp
    image: elevate/bpp:1.0
    volumes:
      - ../mentoring-bpp-service/src/:/var/src
    ports:
      - '3005:3005'
    command: ['nodemon', 'app.js']
    depends_on:
      - redis
    networks:
      - elevate_net
  bpp-catalog:
    build: '../mentoring-bpp-catalog-service/'
    container_name: elevate-catalog
    image: elevate/catalog:1.0
    volumes:
      - ../mentoring-bpp-catalog-service/src/:/var/src
    ports:
      - '3009:3009'
    command: ['nodemon', 'app.js']
    depends_on:
      - redis
    networks:
      - elevate_net
      - elevate_elastic
  elasticsearch:
    container_name: elevate-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.2
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    networks:
      - elevate_elastic
  logstash:
    container_name: elevate-logstash
    image: docker.elastic.co/logstash/logstash:8.5.2
    ports:
      - '9600:9600'
    environment:
      - "xpack.monitoring.enabled=true"
    volumes:
      - ./pipeline/:/usr/share/logstash/pipeline/
    networks:
      - elevate_elastic
    depends_on:
      - elasticsearch
networks:
  elevate_net:
    external: false
  elevate_elastic:
    external: false
volumes:
  zookeeper-data:
  kafka-data:
  mongo-data:
